{"version":3,"sources":["components/Navbar.tsx","components/Card.tsx","components/Container.tsx","components/Title.tsx","components/Button.tsx","components/Center.tsx","components/Input.tsx","components/LoginForm.tsx","ducks/Users.ts","containers/Auth/Login.tsx","components/RegisterForm.tsx","containers/Auth/Register.tsx","components/Footer.tsx","components/Post.tsx","ducks/Posts.ts","containers/NewsFeed/index.tsx","components/ProfileImg.tsx","containers/Profile/index.tsx","services/firebase.ts","services/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","link","color","textDecoration","navbar","borderBottom","padding","Navbar","to","icon","faNewspaper","float","faUser","React","backgroundColor","border","Card","children","this","props","center","alignItems","undefined","display","flexDirection","height","justifyContent","width","Container","Title","block","borderRadius","marginBottom","fontWeight","Button","textAlign","spanStyle","fontSize","textTransform","Input","label","input","LoginForm","handleSubmit","onSubmit","Field","placeholder","name","type","component","reduxForm","form","reducer","state","Login","login","connect","dispatch","payload","email","password","getState","a","auth","signInWithEmailAndPassword","loginThunk","RegisterForm","Register","register","db","createUserWithEmailAndPassword","userCredential","user","id","uid","doc","collection","set","role","registerThunk","styles","button","flex","cursor","footer","marginLeft","Footer","like","share","onClick","faThumbsUp","faRetweet","Post","image","src","START","SUCCESS","ERROR","initialState","data","fetched","fetching","action","error","fetchPosts","storage","get","snaps","posts","forEach","x","Promise","all","Object","keys","map","ref","getDownloadURL","url","imgIds","keyedImages","imageURL","console","log","NewsFeed","handleLike","handleShare","post","key","margin","Posts","loading","bindActionCreators","postDuck","img","ProfileImg","container","row","Profile","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","services","App","onAuthStateChanged","indexOf","window","location","pathname","history","push","test","setState","exact","path","Component","Boolean","hostname","match","store","createStore","combineReducers","reducers","formReducer","applyMiddleware","thunk","withExtraArgument","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ea7404c5.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { faNewspaper, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst style = {\n    link:{\n        color: '#555',\n        textDecoration:'none',\n    },\n    navbar:{\n        borderBottom: 'solid 1px #aaa',\n        padding: '10px 15px',\n    },\n}\n\nexport default class Navbar extends React.Component {\n    public render(){\n        return(\n            <div style={style.navbar}>\n                <Link to='/app/newsfeed' style={style.link}>\n                    <FontAwesomeIcon icon={faNewspaper} /> NXT Instagram\n                </Link>\n                <div style={{float: 'right'}}>\n                    <Link to='/app/profile' style={style.link}> \n                        <FontAwesomeIcon icon={faUser} /> Perfil\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}","import * as React from 'react'\n\nconst style = {\n   backgroundColor: '#fff' ,\n   border:'1px solid #ddd',\n   padding: '10px 15px',\n}\n\nexport default class Card extends React.Component {\n    \n    public render(){\n        const { children } = this.props\n        return (\n            <div style={style}>{children}</div>\n        )\n    }\n}","import * as React from 'react'\n\nconst style = (center: boolean): React.CSSProperties => ({\n    alignItems: center? 'center': undefined,\n    backgroundColor: '#eee' ,\n    display: 'flex',\n    flexDirection: 'column',\n    height: 'calc(100vh - 20px)',\n    justifyContent: 'center',\n    padding: '10px 15px',\n    width: 'calc(100vw - 30px)',\n})\n\ninterface IContainerProps {\n    center?: boolean\n}\n\nexport default class Container extends React.Component<IContainerProps> {\n    \n    public render(){\n        const { children, center = false } = this.props\n        return (\n            <div style={style(center)}>\n                {children}\n            </div>\n        )\n    }\n}","import * as React from 'react'\n\nconst style = {\n   color: '#555'\n}\n\nexport default class Title extends React.Component {\n    \n    public render(){\n        const { children } = this.props\n        return (\n            <h2 {...this.props} style={style}/>\n        )\n    }\n}","import * as React from 'react'\n\nconst style = (block: boolean) => ({\n   backgroundColor: '#00d1b2' ,\n   border:'0px',\n   borderRadius: '4px',\n   padding: '10px 15px',\n   color: '#fff',\n   marginBottom: '10px',\n   fontWeight: 900,\n   width: block ? '100%' : undefined\n})\n\ninterface IbuttonProps {\n    block?: boolean\n}\n\nexport default class Button extends React.Component<IbuttonProps> {\n    public render(){\n        const { block = false } = this.props\n        return (\n            <button {...this.props} style={style(block)}/>\n        )\n    }\n}","import * as React from 'react'\n\nconst style = {\n   textAlign: 'center',\n   width: '100%',\n} as React.CSSProperties\n\nexport default class Card extends React.Component {\n    \n    public render(){\n        const { children } = this.props\n        return (\n            <div {...this.props} style={style}/>\n        )\n    }\n}","import * as React from 'react'\nimport { WrappedFieldProps } from 'redux-form'\n\nconst style = {\n   backgroundColor: '#fff' ,\n   border:'1px solid #ddd',\n   borderRadius: '4px',\n   marginBottom: '10px',\n   padding: '10px 15px',\n   width: 'calc(100% - 30px)',\n\n}\n\nconst spanStyle = {\n    color: '#777',\n    fontSize: '10px',\n    textTransform: 'uppercase',\n    fontWeight: 900\n} as React.CSSProperties\n\ninterface IInputProps{\n    placeholder?: string\n    label: string\n}\n\n const Input: React.StatelessComponent<WrappedFieldProps & IInputProps> = props => {\n    const { label, input } = props\n    return (\n        <div>\n            <span style={spanStyle}>{label}</span>\n            <input {...props} {...input}style={style}/>\n\n\n        </div>\n    )\n}\n\nexport default Input","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport Button from './Button'\nimport Center from './Center'\nimport Input from './Input'\nimport { ILogin } from '../ducks/Users'\nclass LoginForm extends React.Component<InjectedFormProps<ILogin>>{\n    public render(){\n        const { handleSubmit } = this.props\n        return(\n            <form onSubmit={ handleSubmit }>\n                <Field label='Correo' placeholder= 'Correo' name='email' type='email' component={Input}/>\n                <Field label='Contraseña' placeholder= 'Correo' name='password' type='password' component={Input}/>\n                <Button block={true}>Enviar</Button>\n                <Center\n                    ><Link to='/register'>Ir al Registro</Link>\n                </Center>\n            </form>\n        )\n    }\n}\n\nexport default reduxForm<ILogin>({\n    form: 'login',\n})(LoginForm)","import { Dispatch } from 'redux'\nimport { IServices } from '../services'\nimport { DH_CHECK_P_NOT_PRIME } from 'constants'\n\nexport interface ILogin {\n    email: string\n    password: string\n}\n\nexport interface IRegister {\n    email: string\n    password: string\n}\n\nexport default function reducer(state={}){\n    return state\n}\n\nexport const login = ({email, password}: ILogin) =>\n    async (dispatch: Dispatch, getState: () => any, { auth }: IServices) => {\n        await auth.signInWithEmailAndPassword(email, password)\n    }\n\nexport const register = ({email, password}: IRegister) =>\n    async (dispatch: Dispatch, getState: () => any, { auth, db }: IServices) => {\n        const userCredential = await auth.createUserWithEmailAndPassword(email, password)\n        const { user } = userCredential\n        const id = user ? user.uid : undefined\n        const doc = db.collection('users').doc(id)\n        await doc.set({ role: 'user'})\n    }","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport Card from '../../components/Card'\nimport Container from '../../components/Container'\nimport Title from '../../components/Title'\nimport LoginForm from '../../components/LoginForm'\nimport { ILogin, login as loginThunk } from '../../ducks/Users'\n\ninterface ILoginProps {\n    login: (a: ILogin)=>void\n}\nclass Login extends React.Component<ILoginProps> {\n    public render(){\n        const { login } = this.props\n        return (\n            <Container center={true}>\n                <Card>\n                    <Title>Iniciar sesión</Title>\n                    <LoginForm onSubmit={login}/>\n                </Card>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state:any) => state\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => ({\n    login: (payload: any) => dispatch(loginThunk(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport Button from './Button'\nimport Center from './Center'\nimport Input from './Input'\n\nclass RegisterForm extends React.Component<InjectedFormProps>{\n    public render(){\n        const { handleSubmit } = this.props\n        return(\n            <form onSubmit={ handleSubmit }>\n                <Field label='Correo' placeholder= 'Correo' name='email' type='email' component={Input}/>\n                <Field label='Contraseña' placeholder= 'Correo' name='password' type='password' component={Input}/>\n                <Button block={true}>Enviar</Button>\n                <Center\n                    ><Link to='/'>Iniciar sesión</Link>\n                </Center>\n            </form>\n        )\n    }\n}\n\nexport default reduxForm<any, any>({\n    form: 'login',\n})(RegisterForm)","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport Card from '../../components/Card'\nimport Container from '../../components/Container'\nimport Title from '../../components/Title'\nimport RegisterForm from '../../components/RegisterForm'\nimport { IRegister, register as registerThunk } from '../../ducks/Users'\n\ninterface IRegisterProps {\n    register: (a: IRegister)=>void\n}\nclass Register extends React.Component<IRegisterProps> {\n    public render(){\n        const { register } = this.props\n        return (\n            <Container center={true}>\n                <Card>\n                    <Title>Registrar</Title>\n                    <RegisterForm onSubmit={register}/>\n                </Card>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state:any) => state\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => ({\n    register: (payload: any) => dispatch(registerThunk(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import * as React from 'react'\nimport { faThumbsUp, faRetweet } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst styles= {\n    button:{\n        flex: 1, \n        textAlign: 'center', \n        padding: '10px 15px', \n        cursor: 'pointer',\n    },\n    footer:{ \n        display: 'flex', \n        backgroundColor: '#eee', \n        marginLeft:'-15px', \n        marginBottom:'-10px',\n        width: 'calc(100% + 30px)',\n    },\n} \n\ninterface IFooterProps{\n    like: () => void\n    share: () => void\n}\nexport default class Footer extends React.Component<IFooterProps> {\n    public render(){\n        const { like, share } = this.props\n        return(\n            <div style={styles.footer}>\n                <div onClick={like} style={styles.button as React.CSSProperties}> <FontAwesomeIcon icon={faThumbsUp} /> Like</div>\n                <div onClick={share} style={styles.button as React.CSSProperties}> <FontAwesomeIcon icon={faRetweet} /> Compartir</div>\n            </div>\n        )\n    }\n}","import * as React from 'react'\nimport Footer from './Footer'\nconst style = {\n   backgroundColor: '#fff' ,\n   border:'1px solid #ddd',\n   marginBottom: '10px',\n   padding: '10px 15px'\n\n}\n\ninterface IPost{\n    image?: string\n    like: () => void\n    share: () => void\n}\n\nexport default class Post extends React.Component<IPost> {\n    \n    public render(){\n        const { image, like, share } = this.props\n        return (\n            <div style={style}>\n                <img style={{width:'300px'}} src={image}/>\n                <Footer like={like} share={share}/>\n            </div>\n        )\n    }\n}","import { Dispatch, AnyAction } from \"redux\"\nimport { IServices } from \"../services\"\nimport { firestore } from 'firebase'\n\nconst START = 'posts/fetch-start'\nconst SUCCESS = 'posts/fetch-success'\nconst ERROR = 'posts/fetch-error'\n\nexport interface IDataPosts {\n    [key: string]:{\n        comment: string,\n        userId: string,\n        createdAt: firestore.Timestamp,\n        imageURL: string,\n    }\n}\n\nconst fetchStart = () => ({\n    type: START,\n})\n\nconst fetchSuccess = (payload: IDataPosts) => ({\n    payload,\n    type: SUCCESS,\n})\n\nconst fetchError = (error: Error) => ({\n    type: ERROR,\n    error\n})\n\nconst initialState = {\n    data: {},\n    fetched: false,\n    fetching: false,\n}\n\nexport default function reducer(state = initialState, action: AnyAction ) {\n    switch (action.type){\n        case START:\n            return {\n                ...state,\n                fetching: true,\n            }\n        case SUCCESS:\n            return {\n                ...state,\n                data: action.payload,\n            }\n        case ERROR:\n            return {\n                ...state,\n                error: action.error,\n            }\n        default:\n            return state\n    }\n    \n}\n\nexport const fetchPosts = () => \n    async (dispatch: Dispatch, getState: ()=> any, { db, storage }: IServices) => {\n        dispatch(fetchStart())\n        try{\n            const snaps = await db.collection('posts').get()\n            const posts: any = {}\n            snaps.forEach(x => posts[x.id] = x.data())\n            const imgIds = await Promise.all(Object.keys(posts)\n            .map(async x => {\n                const ref = storage.ref(`posts/${x}.jpg`)\n                const url = await ref.getDownloadURL()\n                return [x, url]\n            }))\n            const keyedImages : any = {}\n            imgIds.forEach(x =>  keyedImages[x[0]] = x[1])\n            Object.keys(posts).forEach(x => posts[x] = {\n                ...posts[x],\n                imageURL: keyedImages[x]\n            })\n            dispatch(fetchSuccess(posts))\n            \n        }catch(e){\n            dispatch(fetchError(e))\n        }\n    }\n\nexport const like = (id: string) =>\n    async (dispatch: Dispatch, getState: ()=> any, {}: IServices)=>{\n        console.log('like',id)\n    }\n\nexport const share = (id: string) =>\n    async (dispatch: Dispatch, getState: ()=> any, {}: IServices)=>{\n        console.log('share',id)\n    }","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport Container from '../../components/Container'\nimport Post from '../../components/Post'\nimport * as postDuck from '../../ducks/Posts'\n\ninterface INewsFeedProps{\n    fetchPosts: () => void\n    like: (a: string) => void\n    share: (a: string) => void\n    fetched: boolean\n    loading: boolean\n    data:postDuck.IDataPosts\n}\nclass NewsFeed extends React.Component<INewsFeedProps> {\n    constructor(props: INewsFeedProps){\n        super(props)\n        const { fetchPosts, fetched } = props\n        if(fetched){\n            return\n        }\n        fetchPosts()\n    }\n    \n    public render(){\n        const { data } = this.props\n        return(\n            <Container>\n                {\n                    Object.keys(data).map(x => {\n                        const post = data[x]\n                        console.log(post)\n                        return <div key={x} style={{ margin: '0 auto'}}>\n                                    <Post like={this.handleLike(x)} share={this.handleShare(x)}  image={post.imageURL}/>\n                                </div>\n                    })   \n                }\n                \n            </Container>\n            \n        )\n    }\n    private handleLike = (id:string) => () =>{\n        const { like } = this.props\n        like(id)\n    }\n    private handleShare = (id:string) => () =>{\n        const { share } = this.props\n        share(id)\n    }\n}\nconst mapStateToProps = (state: any) => {\n    const { Posts: { data, fetched, fetching }} = state\n    const loading = fetching || !fetched\n    return {\n        data,\n        fetched,\n        loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => bindActionCreators(postDuck, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsFeed)","import * as React from 'react'\n\nconst style = {\n    img: {\n        borderRadius: '100%',\n    }\n}\nexport default class ProfileImg extends React.Component {\n    public render(){\n        return(\n            <div >\n                <img style={style.img} src='http://placekitten.com/100/100'/>\n            </div>\n            \n        )\n    }\n}","import * as React from 'react'\nimport Button from '../../components/Button'\nimport Card from '../../components/Card'\nimport ProfileImg from '../../components/ProfileImg'\n\nconst style = {\n    container:{\n        padding: '15px',\n    },\n    row: {\n        display: 'flex',\n        justifyContent:'space-between',\n        marginBottom: '10px',\n    }\n}\nexport default class Profile extends React.Component {\n    public render(){\n        return(\n            <div style={style.container}>\n                <div style={style.row}>\n                    <ProfileImg/>\n                    <Button>Agregar</Button>\n                </div>\n                <div style={style.row}>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                </div>\n                <div style={style.row}>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                    <Card><img src='http://placekitten.com/100/100'/></Card>\n                </div>\n            </div>\n            \n            \n        )\n    }\n}","import * as firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBlCTOx2ZuXjfDpOmc5ij8IN0s4rELpLkQ\",\n    authDomain: \"nxt-instagram.firebaseapp.com\",\n    databaseURL: \"https://nxt-instagram.firebaseio.com\",\n    projectId: \"nxt-instagram\",\n    storageBucket: \"nxt-instagram.appspot.com\",\n    messagingSenderId: \"271091805983\",\n    appId: \"1:271091805983:web:2c4ea47cf1105eb8f30a2a\",\n    measurementId: \"G-PKL38PDNKQ\"\n  };\n\nfirebase.initializeApp(firebaseConfig)\nconst firestore = firebase.firestore()\nconst settings = { timestampsInSnapshots: true}\nfirestore.settings(settings)\nexport const auth = firebase.auth()\nexport const db = firestore\nexport const storage = firebase.storage()","import { firestore, storage, auth} from 'firebase'\nimport * as firebase from \"./firebase\"\n\nconst services = {\n    ...firebase,\n}\n\nexport interface IServices {\n    db: firestore.Firestore\n    storage: storage.Storage\n    auth: auth.Auth\n}\n\nexport default services","import './App.css';\n\nimport React from 'react';\nimport { Route } from 'react-router'\n\nimport { History } from 'history'\nimport Navbar from './components/Navbar'\nimport Login from './containers/Auth/Login'\nimport Register from './containers/Auth/Register'\nimport NewsFeed from './containers/NewsFeed'\nimport Profile from './containers/Profile'\nimport services from './services'\n\ninterface IApp {\n    history: History\n}\n\nclass App extends React.Component<IApp>{\n    public state = {\n        loading: true,\n    }\n    public componentDidMount(){\n        const { auth } = services\n        auth.onAuthStateChanged(user => {\n            if(user){\n                if(['/','/register'].indexOf(window.location.pathname)> -1){\n                    const { history } = this.props\n                    history.push('/app/newsfeed')\n                }\n            } else {\n                if(/\\app\\/./.test(window.location.pathname)){\n                    const { history } = this.props\n                    history.push('/')\n                }\n            }\n            this.setState({loading:false})\n        })\n    }\n    public render() {\n        const { loading } = this.state\n        return (\n            loading? 'Loading':\n            <div>\n                <Route exact={true} path='/' component={Login}/>\n                <Route exact={true} path='/register' component={Register}/>\n                <Route path='/app' component={Navbar}/>\n                <Route exact={true} path='/app/newsfeed' component={NewsFeed}/>\n                <Route exact={true} path='/app/profile' component={Profile}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport { createBrowserHistory } from \"history\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nimport App from './App';\nimport * as reducers from './ducks'\nimport * as serviceWorker from './serviceWorker';\nimport services from './services'\n\nconst store = createStore(combineReducers({\n    ...reducers,\n    form: formReducer,\n}), applyMiddleware(thunk.withExtraArgument(services)))\n\nconst history = createBrowserHistory()\nReactDOM.render(\n        <Provider store={store}>\n            <Router history={history}>\n                <App history={history}/>\n            </Router>\n        </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}